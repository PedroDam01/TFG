/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buysale4u.swing.usuarios;

import buysale4u.control.Chat;

import entidades.Conversacion;
import entidades.Usuario;
import javax.swing.JFrame;
import javax.swing.ListModel;

/**
 * Interfaz grafica destinada a mostrar las conversaciones abiertas con los
 * demas usuarios, enviar mensajes y mostrar los mensajes enviados y recibidos
 *
 * @author PedroFB
 */
public class PanelChat extends javax.swing.JPanel {

    //Thread actualizar;    se incorporara en la version siguiente
    //variable cadena de texto donde almacenamos el email del usuario receptor del mensaje
    String email;

    /**
     *
     * Creates new form PanelChat
     */
    public PanelChat() {

        initComponents();
        Chat.listar(listaConversaciones);
        texto.setEditable(false);
        /**
         * Fase beta, version de pruebas se incorpora en la version siguiente
         * actualizar = new Thread(new Runnable() {
         *
         * @Override public void run() { while (true) {
         *
         * Chat.listar(listaConversaciones); try { Thread.sleep(2000); } catch
         * (InterruptedException e) { JOptionPane.showMessageDialog(jButton1,
         * "Error en la red"); } } }
         *
         * });
         *
         * //actualizar.start();
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelLista = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaConversaciones = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        textoEnviar = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        panelLista.setLayout(new java.awt.GridBagLayout());

        listaConversaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaConversacionesMouseClicked(evt);
            }
        });
        listaConversaciones.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaConversacionesValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listaConversaciones);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.ipady = 258;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        panelLista.add(jScrollPane3, gridBagConstraints);

        jButton2.setText("Nuevo Mensaje");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 53, 0);
        panelLista.add(jButton2, gridBagConstraints);

        borrar.setText("Borrar Conversacion");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        panelLista.add(borrar, gridBagConstraints);

        add(panelLista, java.awt.BorderLayout.LINE_START);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        texto.setEditable(false);
        jScrollPane1.setViewportView(texto);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 373;
        gridBagConstraints.ipady = 228;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        textoEnviar.setColumns(20);
        textoEnviar.setRows(5);
        jScrollPane2.setViewportView(textoEnviar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 235;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 12, 0);
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jButton1.setText("Enviar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 0);
        jPanel1.add(jButton1, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // metodo para enviar un mensaje con los datos de los campos introducidos
        Chat.enviar(texto.getText(), listaConversaciones.getModel().getElementAt(listaConversaciones.getSelectedIndex()).getEmail());
        //introducimos los datos de la conversacion 
        llenarConversacion();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void listaConversacionesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaConversacionesValueChanged
        //introducimos los datos de la conversacion 
        llenarConversacion();

    }//GEN-LAST:event_listaConversacionesValueChanged
    /**
     * Metodo con el cual introducimos los datos de la conversacion con un
     * usuario en un campo de texto de la interfaz grafica
     */
    private void llenarConversacion() {
        //cadena de texto en la que concatenamos los datos de los mensajes
        String cadena = "";
        //inicializamos un nuevo modelo de lista con el modelo de la lista listaConversaciones
        ListModel lista = listaConversaciones.getModel();
        //nueva variable numerica donde introducimos el valor del indice seleccionado
        int currentSelected = listaConversaciones.getSelectedIndex();
        //comprobamos que sea un indice valido
        if (currentSelected != -1) {
            // inicializamos un nuevo objeto de Usuario con el elemento seleccionado de la lista
            Usuario currentUser = (Usuario) lista.getElementAt(currentSelected);
            //inicializamos una array de Conversacion con los datos de retorno del metodo insertarTexto de la clase Chat
            Conversacion[] conversacion = Chat.insertarTexto(currentUser);
            //iteramos el anterior array para extraer los datos
            for (Conversacion c : conversacion) {
                //concatenamos la cadena de texto con los datos de la conversacion
                cadena = cadena + "\n" + c.toString();
            }
            //mostramos los datos de la cadena de texto en la interfaz grafica
            texto.setText(cadena);
        }

    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //creamos una nueva ventana
        JFrame newframe = new JFrame();
        //creamos un nuevo panel con el constructor de la clase NuevoMensaje
        NuevoMensaje panel = new NuevoMensaje();
        //cambiamos el tamaño del panel
        panel.setSize(500, 500);
        // hacemos visible el panel
        panel.setVisible(true);
        //añadimos el panel a la ventana
        newframe.add(panel);
        //cambiamos el tamaño de la ventana
        newframe.setSize(500, 500);
        //hacemos visible la ventana
        newframe.setVisible(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        //borramos la conversacion con el usuario seleccionado
        Chat.borrar(email);
        //volvemos a listar los datos de las conversaciones en la lista
        Chat.listar(listaConversaciones);
        //eliminamos todo el texto del campo texto
        texto.setText("");
    }//GEN-LAST:event_borrarActionPerformed

    private void listaConversacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaConversacionesMouseClicked
        // inicializamos un nuevo usuario con el elemento seleccionado de la lista
        Usuario u = listaConversaciones.getSelectedValue();
        // cambiamos el valor del campo email por el email del usuario anterior
        email = u.getEmail();
    }//GEN-LAST:event_listaConversacionesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<Usuario> listaConversaciones;
    private javax.swing.JPanel panelLista;
    private javax.swing.JTextPane texto;
    private javax.swing.JTextArea textoEnviar;
    // End of variables declaration//GEN-END:variables
}
